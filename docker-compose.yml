services:
  db:
    image: postgres:latest
    container_name: auth-db
    restart: always
    hostname: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data

  api:
    image: golang:latest
    container_name: auth-api
    working_dir: /app
    depends_on:
      - db
    ports:
      - "8080:8080"
    env_file:
      - .env
    volumes:
      - .:/app
    command: sh -c "go mod tidy && go run main.go"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/healthz"]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 30s
  
  test:
    image: python:3.12
    container_name: auth-test
    working_dir: /tests
    depends_on:
      api:
        condition: service_healthy
    volumes:
      - ./tests:/tests
    command: sh -c "pip install pytest requests && pytest -v --disable-warnings"

volumes:
  db_data:
