name: Go CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  integration:
    runs-on: ubuntu-latest

    services:
      docker:
        image: docker:24.0.5
        options: --privileged

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Compose
      run: |
        sudo apt-get update
        sudo apt-get install docker-compose -y

    - name: Create .env file
      run: |
        echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> .env
        echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env
        echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> .env
        echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
        echo "DATABASE_DSN=${{ secrets.DATABASE_DSN }}" >> .env
        echo "TOKEN_EXPIRY=${{ secrets.TOKEN_EXPIRY }}" >> .env

    - name: Build and start services
      run: docker-compose up --build -d

    - name: Wait for API healthcheck
      run: |
        echo "Waiting for API to become healthy..."
        for i in {1..10}; do
          status=$(docker inspect --format='{{.State.Health.Status}}' auth-api)
          if [ "$status" == "healthy" ]; then
            echo "API is healthy!"
            exit 0
          fi
          sleep 5
        done
        echo "API did not become healthy in time."
        docker-compose logs
        exit 1

    - name: Run tests
      run: docker-compose run --rm test

    - name: Show logs (on failure)
      if: failure()
      run: docker-compose logs

    - name: Shutdown
      if: always()
      run: docker-compose down -v
      